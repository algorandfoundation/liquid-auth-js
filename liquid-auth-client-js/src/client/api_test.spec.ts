/**
 * Liquid Auth API
 * Authentication API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api.js"
import { Configuration } from "./configuration.js"

const config: Configuration = {}

describe("DefaultApi", () => {
  let instance: api.DefaultApi
  beforeEach(function() {
    instance = new api.DefaultApi(config)
  });

  test("androidControllerAssetLinks", () => {
    return expect(instance.androidControllerAssetLinks({})).resolves.toBe(null)
  })
  test("assertionControllerAssertionRequest", () => {
    const body: api.PublicKeyCredentialRequestOptions = undefined
    const credId: any = undefined
    return expect(instance.assertionControllerAssertionRequest(body, credId, {})).resolves.toBe(null)
  })
  test("assertionControllerAssertionResponse", () => {
    const body: api.AssertionCredentialJSON = undefined
    return expect(instance.assertionControllerAssertionResponse(body, {})).resolves.toBe(null)
  })
  test("attestationControllerAttestationResponse", () => {
    return expect(instance.attestationControllerAttestationResponse({})).resolves.toBe(null)
  })
  test("attestationControllerRequest", () => {
    return expect(instance.attestationControllerRequest({})).resolves.toBe(null)
  })
  test("authControllerKeys", () => {
    return expect(instance.authControllerKeys({})).resolves.toBe(null)
  })
  test("authControllerLogout", () => {
    return expect(instance.authControllerLogout({})).resolves.toBe(null)
  })
  test("authControllerRead", () => {
    return expect(instance.authControllerRead({})).resolves.toBe(null)
  })
  test("authControllerRemove", () => {
    return expect(instance.authControllerRemove({})).resolves.toBe(null)
  })
  test("connectControllerLinkWalletResponse", () => {
    const body: api.LinkResponseDTO = undefined
    return expect(instance.connectControllerLinkWalletResponse(body, {})).resolves.toBe(null)
  })
})

